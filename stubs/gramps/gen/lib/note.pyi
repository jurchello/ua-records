from typing import Any
from typing_extensions import Self
from .primaryobj import BasicPrimaryObject

class Note(BasicPrimaryObject):
    FLOWED = 0
    FORMATTED = 1
    POS_HANDLE = 0
    POS_ID = 1
    POS_TEXT = 2
    POS_FORMAT = 3
    POS_TYPE = 4
    POS_CHANGE = 5
    POS_TAGS = 6
    POS_PRIVATE = 7

    def __init__(self, text: str = "") -> None: ...
    def append(self, text: str | Any) -> None: ...
    def get(self) -> str: ...
    def get_format(self) -> int: ...
    def get_links(self) -> list[tuple[str, str, str, str]]: ...
    def get_referenced_handles(self) -> list[tuple[str, str]]: ...
    @classmethod
    def get_schema(cls) -> dict[str, Any]: ...
    def get_styledtext(self) -> Any: ...
    def get_text_data_list(self) -> list[str]: ...
    def get_type(self) -> str: ...
    def merge(self, acquisition: Self) -> None: ...
    def serialize(self) -> tuple[Any, ...]: ...
    def set(self, text: str) -> None: ...
    def set_format(self, format: int) -> None: ...
    def set_styledtext(self, text: Any) -> None: ...
    def set_type(self, the_type: str) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...