from typing import Any

class Surname:
    def __init__(self, source: Any | None = ..., data: Any | None = ...) -> None: ...
    def get_connector(self) -> str: ...
    def get_origintype(self) -> int: ...
    def get_prefix(self) -> str: ...
    def get_primary(self) -> bool: ...
    @classmethod
    def get_schema(cls) -> dict[str, Any]: ...
    def get_surname(self) -> str: ...
    def get_text_data_list(self) -> list[str]: ...
    def is_empty(self) -> bool: ...
    def is_equivalent(self, other: "Surname") -> int: ...
    def merge(self, acquisition: "Surname") -> None: ...
    def serialize(self) -> tuple[Any, ...]: ...
    def set_connector(self, connector: str) -> None: ...
    def set_origintype(self, the_type: int) -> None: ...
    def set_prefix(self, val: str) -> None: ...
    def set_primary(self, primary: bool = True) -> None: ...
    def set_surname(self, val: str) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...