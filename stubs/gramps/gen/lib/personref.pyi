from typing import Any

class PersonRef:
    def __init__(self, source: Any | None = ...) -> None: ...
    def get_handle_referents(self) -> list[Any]: ...
    def get_note_child_list(self) -> list[Any]: ...
    def get_referenced_handles(self) -> list[tuple[str, str]]: ...
    def get_relation(self) -> str: ...
    @classmethod
    def get_schema(cls) -> dict[str, Any]: ...
    def get_text_data_child_list(self) -> list[Any]: ...
    def get_text_data_list(self) -> list[str]: ...
    def is_equivalent(self, other: "PersonRef") -> int: ...
    def merge(self, acquisition: "PersonRef") -> None: ...
    def serialize(self) -> tuple[Any, ...]: ...
    def set_relation(self, rel: str) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...