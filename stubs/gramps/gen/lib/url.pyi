from typing import Any
from .secondaryobj import SecondaryObject
from .privacybase import PrivacyBase

class Url(SecondaryObject, PrivacyBase):
    def __init__(self, source: Any | None = ...) -> None: ...
    def are_equal(self, other: "Url") -> bool: ...
    def get_description(self) -> str: ...
    def get_full_path(self) -> str: ...
    def get_path(self) -> str: ...
    @classmethod
    def get_schema(cls) -> dict[str, Any]: ...
    def get_text_data_list(self) -> list[str]: ...
    def get_type(self) -> str: ...
    def is_equivalent(self, other: "Url") -> bool: ...
    def merge(self, acquisition: "Url") -> None: ...
    def parse_path(self) -> tuple[str, str, str, str, str, str]: ...
    def serialize(self) -> tuple[Any, ...]: ...
    def set_description(self, description: str) -> None: ...
    def set_path(self, path: str) -> None: ...
    def set_type(self, the_type: str) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...