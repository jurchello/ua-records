from typing import Any
from typing_extensions import Self
from .citationbase import CitationBase
from .notebase import NoteBase
from .attrbase import AttributeBase
from .mediabase import MediaBase
from .addressbase import AddressBase
from .urlbase import UrlBase
from .ldsordbase import LdsOrdBase
from .primaryobj import PrimaryObject

class Person(CitationBase, NoteBase, AttributeBase, MediaBase, AddressBase, UrlBase, LdsOrdBase, PrimaryObject):
    FEMALE = 0
    MALE = 1
    UNKNOWN = 2

    def __init__(self, data: Any | None = ...) -> None: ...
    
    @property
    def gender(self) -> int: ...
    @gender.setter
    def gender(self, value: int) -> None: ...
    def add_alternate_name(self, name: Any) -> None: ...
    def add_event_ref(self, event_ref: Any) -> None: ...
    def add_family_handle(self, family_handle: str) -> None: ...
    def add_parent_family_handle(self, family_handle: str) -> None: ...
    def add_person_ref(self, person_ref: Any) -> None: ...
    def clear_family_handle_list(self) -> None: ...
    def clear_parent_family_handle_list(self) -> None: ...
    def get_alternate_names(self) -> list[Any]: ...
    def get_birth_ref(self) -> Any | None: ...
    def get_citation_child_list(self) -> list[Any]: ...
    def get_death_ref(self) -> Any | None: ...
    def get_event_ref_list(self) -> list[Any]: ...
    def get_family_handle_list(self) -> list[str]: ...
    def get_gender(self) -> int: ...
    def get_handle_referents(self) -> list[Any]: ...
    def get_main_parents_family_handle(self) -> str | None: ...
    def get_nick_name(self) -> str | None: ...
    def get_note_child_list(self) -> list[Any]: ...
    def get_parent_family_handle_list(self) -> list[str]: ...
    def get_person_ref_list(self) -> list[Any]: ...
    def get_primary_event_ref_list(self) -> Any: ...
    def get_primary_name(self) -> Any: ...
    def get_referenced_handles(self) -> list[tuple[str, str]]: ...
    @classmethod
    def get_schema(cls) -> dict[str, Any]: ...
    def get_text_data_child_list(self) -> list[Any]: ...
    def get_text_data_list(self) -> list[str]: ...
    def merge(self, acquisition: Self) -> None: ...
    def remove_family_handle(self, family_handle: str) -> bool: ...
    def remove_parent_family_handle(self, family_handle: str) -> tuple[str, str, str] | None: ...
    def serialize(self) -> tuple[Any, ...]: ...
    def set_alternate_names(self, alt_name_list: list[Any]) -> None: ...
    def set_birth_ref(self, event_ref: Any) -> None: ...
    def set_death_ref(self, event_ref: Any) -> None: ...
    def set_event_ref_list(self, event_ref_list: list[Any]) -> None: ...
    def set_family_handle_list(self, family_list: list[str]) -> None: ...
    def set_gender(self, gender: int) -> None: ...
    def set_main_parent_family_handle(self, family_handle: str) -> bool: ...
    def set_parent_family_handle_list(self, family_list: list[str]) -> None: ...
    def set_person_ref_list(self, person_ref_list: list[Any]) -> None: ...
    def set_preferred_family_handle(self, family_handle: str) -> bool: ...
    def set_primary_name(self, name: Any) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...