from typing import Any

class EventRef:
    def __init__(self, source: Any | None = ...) -> None: ...
    def get_citation_child_list(self) -> list[Any]: ...
    def get_handle_referents(self) -> list[Any]: ...
    def get_note_child_list(self) -> list[Any]: ...
    def get_referenced_handles(self) -> list[tuple[str, str]]: ...
    def get_role(self) -> tuple[int, str]: ...
    @classmethod
    def get_schema(cls) -> dict[str, Any]: ...
    def get_text_data_child_list(self) -> list[Any]: ...
    def get_text_data_list(self) -> list[str]: ...
    def is_equivalent(self, other: "EventRef") -> int: ...
    def merge(self, acquisition: "EventRef") -> None: ...
    role: tuple[int, str]
    def serialize(self) -> tuple[Any, ...]: ...
    def set_role(self, role: tuple[int, str]) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...