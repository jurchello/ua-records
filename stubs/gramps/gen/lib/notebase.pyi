from typing import Any

class NoteBase:
    def __init__(self, source: Any | None = ...) -> None: ...
    def add_note(self, handle: str) -> bool: ...
    def get_note_child_list(self) -> list[Any]: ...
    def get_note_list(self) -> list[str]: ...
    def get_referenced_note_handles(self) -> list[tuple[str, str]]: ...
    def has_note_reference(self, note_handle: str) -> bool: ...
    def remove_note(self, handle: str) -> None: ...
    def remove_note_references(self, note_handle_list: list[str]) -> None: ...
    def replace_note_references(self, old_handle: str, new_handle: str) -> None: ...
    def serialize(self) -> tuple[Any, ...]: ...
    def set_note_list(self, note_list: list[str]) -> None: ...
    def unserialize(self, data: tuple[Any, ...]) -> None: ...